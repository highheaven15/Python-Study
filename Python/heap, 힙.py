#힙(Heap)자료구조

힙은 최대힙과 최소힙이 있다.
최대힙-모든 부모 노드값이 자식노드의 값보다 크거나 같은 값을 갖는다.
최소힙-모든 부모 노드값이 자식노드의 값보다 작거나 같은 값을 갖는다.
부모 인덱스 x, 왼쪽자식 인덱스 2x, 오른쪽 자식 인덱스 2x+1

힙의 특징을 이용하면 우선순위 큐를 구현할수있다.

스택-가장 마지막에 들어온 자료를 먼저 꺼낸다.
큐-가장 먼저 들어온 자료를 먼저 꺼낸다.
우선순위 큐-가장 우선순위가 높은 값을 먼저 꺼낸다.
=>즉, 최댓값, 최솟값을 찾아내는 연산을 빠르게 하기 위해 고안된 자료구조


heap의 흥미로운 특성은 가장 작은 요소가 항상 루트인 heap[0]

import heapq (as hq)
heapq.heappush(a, n) : #heap불변성을 유지하면서 n을 a리스트에 push
heapq.heappop(a) : #heap불변성을 유지하면서 heap에서 가장 작은 항목을 pop하고 반환
#heap이 비어있으면 IndexError가 발생, pop하지 않고 가장 작은 항목에 접근시 heap[0]

heapq.heappushpop(a, n) : #heap에 n을 push한 다음 heap에서 가장 작은 항목을 pop해서 반환
별도 실행하는 것보다 효율적이다.

heapq.heapify(a) #리스트 a를 힙으로 변환

heap.heapify(a)를 하면 a가 오름차순으로 정렬되있는건 아니다.

